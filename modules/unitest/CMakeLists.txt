if(cnstream_build_tests)
  include_directories(${PROJECT_SOURCE_DIR}/modules/unitest/include/)
  include_directories(${PROJECT_SOURCE_DIR}/modules/core/src)

  file(GLOB_RECURSE test_core_srcs ${PROJECT_SOURCE_DIR}/modules/unitest/core/*.cpp)
  set(test_srcs ${test_core_srcs})
  list(APPEND test_srcs ${PROJECT_SOURCE_DIR}/modules/unitest/test_base.cpp)
  list(APPEND test_srcs ${PROJECT_SOURCE_DIR}/modules/unitest/test_main.cpp)
  if(build_display)
    include_directories(${PROJECT_SOURCE_DIR}/modules/display/src)
    file(GLOB_RECURSE test_displasy_srcs ${PROJECT_SOURCE_DIR}/modules/unitest/display/*.cpp)
    list(APPEND test_srcs ${test_display_srcs})
  endif()
  if(build_encode)
    include_directories(${PROJECT_SOURCE_DIR}/modules/encode/src)
    file(GLOB_RECURSE test_encode_srcs ${PROJECT_SOURCE_DIR}/modules/unitest/encode/*.cpp)
    list(APPEND test_srcs ${test_encode_srcs})
  endif()
  if(build_fps_stats)
    include_directories(${PROJECT_SOURCE_DIR}/modules/fps_stats/src)
    file(GLOB_RECURSE test_fps_stats_srcs ${PROJECT_SOURCE_DIR}/modules/unitest/fps_stats/*.cpp)
    list(APPEND test_srcs ${test_fps_stats_srcs})
  endif()
  if(build_inference)
    include_directories(${PROJECT_SOURCE_DIR}/modules/inference/src)
    file(GLOB_RECURSE test_infer_srcs ${PROJECT_SOURCE_DIR}/modules/unitest/inference/*.cpp)
    list(APPEND test_srcs ${test_infer_srcs})
  endif()
  if(build_osd)
    include_directories(${PROJECT_SOURCE_DIR}/modules/osd/src)
    file(GLOB_RECURSE test_osd_srcs ${PROJECT_SOURCE_DIR}/modules/unitest/osd/*.cpp)
    list(APPEND test_srcs ${test_osd_srcs})
  endif()
  if(build_source)
    include_directories(${PROJECT_SOURCE_DIR}/modules/source/src)
    file(GLOB_RECURSE test_source_srcs ${PROJECT_SOURCE_DIR}/modules/unitest/source/*.cpp)
    list(APPEND test_srcs ${test_source_srcs})
  endif()
  if(build_track)
    include_directories(${PROJECT_SOURCE_DIR}/modules/track/src)
    file(GLOB_RECURSE test_track_srcs ${PROJECT_SOURCE_DIR}/modules/unitest/track/*.cpp)
    list(APPEND test_srcs ${test_track_srcs})
  endif()
	if(build_discard_frame)
	  include_directories(${PROJECT_SOURCE_DIR}/modules/discard_frame/src)
		file(GLOB_RECURSE test_discard_frame_srcs ${PROJECT_SOURCE_DIR}/modules/unitest/discard_frame/*.cpp)
    list(APPEND test_srcs ${test_discard_frame_srcs})
  endif()

  add_executable(cnstream_test ${test_srcs})

  if(cnstream_build_integrated_lib)
    target_link_libraries(cnstream_test gtest dl cnstream ${CN_LIBS} ${3RDPARTY_LIBS} ${OpenCV_LIBS} ${FFMPEG_LIBRARIES} pthread)
  else()
    set(module_list core)
    set(depended_modules cns-core)
    if(build_display)
      list(APPEND module_list display)
      list(APPEND depended_modules cns-display)
    endif()
    if(build_encode)
      list(APPEND module_list encode)
      list(APPEND depended_modules cns-encode)
    endif()
    if(build_fps_stats)
      list(APPEND module_list fps_stats)
      list(APPEND depended_modules cns-fps_stats)
    endif()
    if(build_inference)
      list(APPEND module_list inference)
      list(APPEND depended_modules cns-inference)
    endif()
    if(build_osd)
      list(APPEND module_list osd)
      list(APPEND depended_modules cns-osd)
    endif()
    if(build_source)
      list(APPEND module_list source)
      list(APPEND depended_modules cns-source)
    endif()
    if(build_track)
      list(APPEND module_list track)
      list(APPEND depended_modules cns-track)
    endif()
    if(build_discard_frame)
		  list(APPEND module_list discard_frame)
			list(APPEND depended_modules cns-discard_frame)
		endif()

    foreach(module ${module_list})
      include_directories(${PROJECT_SOURCE_DIR}/modules/${module}/include)
    endforeach()    
    target_link_libraries(cnstream_test gtest dl ${depended_modules} ${CN_LIBS} ${3RDPARTY_LIBS} ${OpenCV_LIBS} ${FFMPEG_LIBRARIES} pthread)
  endif()

  add_test(cnstream_test ${EXECUTABLE_OUTPUT_PATH}/cnstream_test)
endif()
