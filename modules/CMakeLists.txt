set(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/lib/)
set(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin/)

set(CNSTREAM_TARGET_SOVERSION 4)
set(CNSTREAM_TARGET_VERSION 4.0)
add_definitions(-DCNSTREAM_VERSION=${CNSTREAM_TARGET_VERSION})

include_directories(${PROJECT_SOURCE_DIR}/3rdparty/googletest/include/)
include_directories(${3RDPARTY_INCLUDE_DIRS})

if( MLU_PLATFORM STREQUAL MLU100 OR 
		 MLU STREQUAL MLU270 OR 
		 MLU STREQUAL MLU220_M2)
  set(module_list core)
  if(build_discard_frame)
	list(APPEND module_list discard_frame)
  endif()
  if(build_display)
    list(APPEND module_list display)
  endif()
  if(build_encode)
    list(APPEND module_list encode)
  endif()
  if(build_fps_stats)
    list(APPEND module_list fps_stats)
  endif()
  if(build_inference)
    list(APPEND module_list inference)
  endif()
  if(build_osd)
    list(APPEND module_list osd)
  endif()
  if(build_source)
    list(APPEND module_list source)
  endif()
  if(build_track)
    list(APPEND module_list track)
  endif()
elseif(MLU_PLATFORM STREQUAL MLU220_SOC) 
  set(module_list core)
  if(build_encode)
    list(APPEND module_list encode)
  endif()
  if(build_fps_stats)
    list(APPEND module_list fps_stats)
  endif()
  if(build_osd)
    list(APPEND module_list osd)
  endif()
endif()


if(HAVE_FFMPEG)
  include_directories(${FFMPEG_INCLUDE_DIR})
endif()
include_directories(${OpenCV_INCLUDE_DIRS})

#FIXME
set(SOURCE_LINKER_LIBS dl ${CN_LIBS} ${3RDPARTY_LIBS} ${OpenCV_LIBS} ${FFMPEG_LIBRARIES} pthread)
  
if(cnstream_build_integrated_lib)
  foreach(module ${module_list})
    include_directories(${PROJECT_SOURCE_DIR}/modules/${module}/include)
    file(GLOB_RECURSE module_src ${PROJECT_SOURCE_DIR}/modules/${module}/*.cpp)
    list(APPEND srcs ${module_src})
  endforeach()
  add_library(cnstream SHARED ${srcs})
  target_link_libraries(cnstream ${SOURCE_LINKER_LIBS})
  set_target_properties(cnstream PROPERTIES VERSION ${CNSTREAM_TARGET_VERSION} SOVERSION ${CNSTREAM_TARGET_SOVERSION})
else()
  if(MLU_PLATFORM STREQUAL MLU220_SOC)
    add_subdirectory(core)
    if(build_fps_stats)
      add_subdirectory(fps_stats)
    endif()
    if(build_osd)
      add_subdirectory(osd)
    endif()
    if(build_encode)
      add_subdirectory(encode)
    endif()
  else()
    add_subdirectory(core)
    if(build_source)
      add_subdirectory(source)
    endif()
    if(build_inference)
      add_subdirectory(inference)
    endif()
    if(build_osd)
      add_subdirectory(osd)
    endif()
    if(build_encode)
      add_subdirectory(encode)
    endif()
    if(build_track)
      add_subdirectory(track)
    endif()
    if(build_display)
      add_subdirectory(display)
    endif()
    if(build_discard_frame)
      add_subdirectory(discard_frame)
    endif()
    if(build_fps_stats)
      add_subdirectory(fps_stats)
    endif()
  endif()
endif()

if(cnstream_build_tests)
  add_subdirectory(unitest)
endif()
