cmake_minimum_required(VERSION 2.8.7)
if(POLICY CMP0046)
  cmake_policy(SET CMP0046 NEW)
endif()
if(POLICY CMP0054)
  cmake_policy(SET CMP0054 NEW)
endif()

# ---[ Google-gflags
#include("${PROJECT_SOURCE_DIR}/cmake/FindGFlags.cmake")
include_directories(${GFLAGS_INCLUDE_DIRS})

# ---[ Google-glog
#include("${PROJECT_SOURCE_DIR}/cmake/FindGlog.cmake")
include_directories(${GLOG_INCLUDE_DIRS})

include_directories(${PROJECT_SOURCE_DIR}/include)

include_directories("${PROJECT_SOURCE_DIR}/modules/core/include")

file(GLOB tools_srcs ${PROJECT_SOURCE_DIR}/tools/src/*.cpp)

foreach(source_file ${tools_srcs})

  get_filename_component(name ${source_file} NAME_WE)
  message("target :  ${name}")
  if(${name} MATCHES "cnstream_inspect")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wl,--no-as-needed")
    if(WITH_RTSP)
      link_directories(${PROJECT_SOURCE_DIR}/3rdparty/live555/lib)
      set(Live555_LIBS liveMedia UsageEnvironment BasicUsageEnvironment groupsock)
      add_executable(${name} ${source_file})
      target_link_libraries(${name} ${Live555_LIBS})
      if(cnstream_build_integrated_lib)
        target_link_libraries(${name} app-modules)
      else()
        target_link_libraries(${name} app-rtsp_sink)
      endif()
    endif()
    if(cnstream_build_integrated_lib)
      target_link_libraries(${name} cnstream dl glog pthread)
    else()
      set(module_list core)
      set(depended_modules cns-core)
      if(build_display)
        list(APPEND module_list display)
        list(APPEND depended_modules cns-display)
      endif()
      if(build_encode)
        list(APPEND module_list encode)
        list(APPEND depended_modules cns-encode)
      endif()
      if(build_fps_stats)
        list(APPEND module_list fps_stats)
        list(APPEND depended_modules cns-fps_stats)
      endif()
      if(build_inference)
        list(APPEND module_list inference)
        list(APPEND depended_modules cns-inference)
      endif()
      if(build_osd)
        list(APPEND module_list osd)
        list(APPEND depended_modules cns-osd)
      endif()
      if(build_source)
        list(APPEND module_list source)
        list(APPEND depended_modules cns-source)
      endif()
      if(build_track)
        list(APPEND module_list track)
        list(APPEND depended_modules cns-track)
      endif()
      if(build_discard_frame)
        list(APPEND module_list discard_frame)
        list(APPEND depended_modules cns-discard_frame)
      endif()

      foreach(module ${module_list})
        include_directories(${PROJECT_SOURCE_DIR}/modules/${module}/include)
      endforeach()
      target_link_libraries(${name} ${depended_modules} dl glog pthread)
    endif()
  else()
    add_executable(${name} ${source_file})
    target_link_libraries(${name} cnrt pthread ${GLOG_LIBRARIES} ${GFLAGS_LIBRARIES} z dl)
  endif()

endforeach()
